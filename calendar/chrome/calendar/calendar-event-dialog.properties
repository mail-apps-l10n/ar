# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0/LGPL 2.1
#
# The contents of this file are subject to the Mozilla Public License Version
# 1.1 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
# The Original Code is Sun event dialog code.
#
# The Initial Developer of the Original Code is Sun Microsystems.
# Portions created by the Initial Developer are Copyright (C) 2006
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
#   Michael Büttner <michael.buettner@sun.com>
#   Philipp Kewisch <mozilla@kewis.ch>
#   Hubert Gajewski <hubert@hubertgajewski.com>, Aviary.pl
#   Martin Schoeder <mschroeder@mozilla.x-home.org>
#   Ahmed Hossam (Xtreme) <xtremesony_xp@yahoo.com>
#
# Alternatively, the contents of this file may be used under the terms of
# either the GNU General Public License Version 2 or later (the "GPL"), or
# the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
#
# ***** END LICENSE BLOCK *****

# LOCALIZATION NOTE (dailyEveryNth):
# Edit recurrence window -> Recurrence pattern -> Daily repeat rules
# #1 - number
# e.g. "every 4 days"
dailyEveryNth=every day;every #1 days
repeatDetailsRuleDaily4=كل نهاية اسبوع

# LOCALIZATION NOTE (weeklyNthOnNounclass...)
# Edit recurrence window -> Recurrence pattern -> Weekly repeat rules
# Translate these strings according to noun class/gender of weekday (%1$S) 
# set in 'repeadDetailsDay...Nounclass' strings.
# Nounclass1 <-> Masculine gender; Nounclass2 <-> Feminine gender.
# Add others strings with suffix 3, 4,... for others noun classes if your
# language need them. In this case, corresponding strings must be added for
# others rule strings with 'Nounclass...' suffix and corresponding values 
# "nounclass..." must be written in 'repeatDetailsDayxNounclass' strings.
# %1$S - weekday (one or more)
# #2 - week interval
# e.g. "every 3 weeks on Tuesday, Wednesday and Thursday
weeklyNthOnNounclass1=كل %1$S;every #2 اسبوع في يوم %1$S
weeklyNthOnNounclass2=كل %1$S;every #2 اسبوع في يوم %1$S

# LOCALIZATION NOTE (weeklyEveryNth):
# Edit recurrence window -> Recurrence pattern -> Weekly repeat rules
# #1 - interval
# e.g. "every 5 weeks"
weeklyEveryNth=كل اسبوع;كل #1 اسابيع

# LOCALIZATION NOTE ('repeatDetailsDay...' and 'repeatDetailsDay...Nounclass'):
# Week days names and week days noun classes (feminine/masculine grammatical
# gender) for languages that need different localization when weekdays nouns
# have different noun classes (genders).
# For every weekday, in 'repeatDetailsDay...Nounclass' strings write:
#   "nounclass1"     for languages with grammatical genders -> MASCULINE gender;
#                    for languages with noun classes -> a noun class;
#                    for languages without noun classes or grammatical gender.
#
#   "nounclass2"     for languages with grammatical genders -> FEMININE gender;
#                    for languages with noun classes -> a different noun class.
#
#   "nounclass3", "nounclass4" and so on for languages that need more than two 
#                    noun classes for weekdays. In this case add corresponding
#                    rule string with "Nounclass..." suffix and ordinal string
#                    "repeatOrdinalxNounclass..."
# Will be used rule strings with "Nounclass..." suffix corresponding to the 
# following strings if there is a weekday in the rule string.
repeatDetailsDay1=الأحد
repeatDetailsDay1Nounclass=nounclass1
repeatDetailsDay2=الأثنين
repeatDetailsDay2Nounclass=nounclass1
repeatDetailsDay3=الثلاثاء
repeatDetailsDay3Nounclass=nounclass1
repeatDetailsDay4=الأربعاء
repeatDetailsDay4Nounclass=nounclass1
repeatDetailsDay5=الخميس
repeatDetailsDay5Nounclass=nounclass1
repeatDetailsDay6=الجمعة
repeatDetailsDay6Nounclass=nounclass1
repeatDetailsDay7=السبت
repeatDetailsDay7Nounclass=nounclass1

# LOCALIZATION NOTE (repeatDetailsAnd)
# Used to show a number of weekdays in a list
# i.e. "Sunday, Monday, Tuesday " + and + " Wednesday"
repeatDetailsAnd=و

# LOCALIZATION NOTE (monthlyNthOfEveryNounclass...):
# Edit recurrence window -> Recurrence pattern -> Monthly repeat rules
# Translate these strings according to noun class/gender of weekday (%2$S) 
# set in 'repeadDetailsDay...Nounclass' strings.
# Nounclass1 <-> Masculine gender; Nounclass2 <-> Feminine gender.
# Add others strings with suffix 3, 4,... for others noun classes if your
# language need them. In this case, corresponding strings must be added for
# others rule strings with 'Nounclass...' suffix and corresponding values 
# "nounclass..." must be written in 'repeatDetailsDayxNounclass' strings. 
# %1$S - ordinal with article and noun class/gender corresponding to weekday
# %2$S - weekday
# #3 - interval
# i.e. "the FIRST MONDAY of every 3 months"
monthlyNthOfEveryNounclass1=%1$S %2$S of every month;%1$S %2$S of every #3 months
monthlyNthOfEveryNounclass2=%1$S %2$S of every month;%1$S %2$S of every #3 months

# LOCALIZATION NOTE (monthlyEveryOfEveryNounclass...):
# Edit recurrence window -> Recurrence pattern -> Monthly repeat rules
# Translate these strings according to noun class/gender of weekday (%1$S) 
# set in 'repeadDetailsDay...Nounclass' strings.
# Nounclass1 <-> Masculine gender; Nounclass2 <-> Feminine gender.
# Add others strings with suffix 3, 4,... for others noun classes if your
# language need them. In this case, corresponding strings must be added for
# others rule strings with 'Nounclass...' suffix and corresponding values 
# "nounclass..." must be written in 'repeatDetailsDayxNounclass' strings.
# %1$S - weekday
# #2 - interval
# i.e. "every MONDAY of every 3 months" 
#  more specific: every monday of January, April, July, October
monthlyEveryOfEveryNounclass1=كل %1$S من كل شهر;كل %1$S من كل #2 شهور
monthlyEveryOfEveryNounclass2=كل %1$S من كل شهر;every %1$S من كل #2 شهور

# LOCALIZATION NOTE (monthlyDayOfNth):
# Edit recurrence window -> Recurrence pattern -> Monthly repeat rules
# %1$S - day of month
# #2 - month interval
# e.g. "day 3 of every 2 months"
monthlyDayOfNth=يوم %1$S من كل شهر;day %1$S من كل #2 شهور

# LOCALIZATION NOTE (monthlyLastDayOfNth):
# Edit recurrence window -> Recurrence pattern -> Monthly repeat rules
# %1$S - day of month
# #2 - month interval
# e.g. "the last day of every 3 months"
monthlyLastDayOfNth=اليوم الأخير من كل شهر; اليوم الأخير كل #1 شهور

# LOCALIZATION NOTE (monthlyEveryDayOfNth):
# Edit recurrence window -> Recurrence pattern -> Monthly repeat rules
# #2 - month interval
# e.g. "every day of the month every 4 months"
monthlyEveryDayOfNth=كل يوم من كل شهر;كل يوم من كل شهر كل  #2 شهور

# LOCALIZATION NOTE (repeatOrdinal...Nounclass...):
# Ordinal numbers nouns for every noun class (grammatical genders) of weekdays
# considered in 'repeatDetailsDayxNounclass' strings. For languages that need
# localization according to genders or noun classes.
# Nounclass1 <-> Masculine gender; Nounclass2 <-> Feminine gender.
# Add 'repeatOrdinal...Nounclass' strings with suffix 3, 4 and so on for
# languages with more than two noun classes for weekdays. In this case 
# must be added corresponding rule strings with 'Nounclass...' suffix and 
# corresponding values "nounclass..." must be written in
# 'repeatDetailsDayxNounclass' strings.
repeatOrdinal1Nounclass1=الأول
repeatOrdinal2Nounclass1=الثاني
repeatOrdinal3Nounclass1=الثالث
repeatOrdinal4Nounclass1=الرابع
repeatOrdinal5Nounclass1=الخامس
repeatOrdinal-1Nounclass1=الأخير
repeatOrdinal1Nounclass2=الأول
repeatOrdinal2Nounclass2=الثاني
repeatOrdinal3Nounclass2=الثالث
repeatOrdinal4Nounclass2=الرابع
repeatOrdinal5Nounclass2=الخامس
repeatOrdinal-1Nounclass2=الأخير

# LOCALIZATION NOTE (yearlyNthOn):
# Edit recurrence window -> Recurrence pattern -> Yearly repeat rules
# %1$S - month
# %2$S - day of month
# #3 - yearly interval
# e.g. "every 3 years on December 14"
yearlyNthOn=كل %1$S %2$S;كل #3 سنين في %1$S %2$S

# LOCALIZATION NOTE (yearlyNthOnNthOfNounclass...):
# Edit recurrence window -> Recurrence pattern -> Yearly repeat rules
# Translate these strings according to noun class/gender of weekday (%2$S) 
# set in 'repeadDetailsDay...Nounclass' strings.
# Nounclass1 <-> Masculine gender; Nounclass2 <-> Feminine gender.
# Add others strings with suffix 3, 4,... for others noun classes if your
# language need them. In this case, corresponding strings must be added for
# others rule strings with 'Nounclass...' suffix and corresponding values 
# "nounclass..." must be written in 'repeatDetailsDayxNounclass' strings.
# %1$S - ordinal with article and noun class/gender corresponding to weekday
# %2$S - weekday
# %3$S - month
# #4 - yearly interval
# e.g. "the second Monday of every March"
# e.g  "every 3 years the second Monday of March"
yearlyNthOnNthOfNounclass1=%1$S %2$S من كل %3$S;كل #4 سنين في %1$S %2$S من %3$S
yearlyNthOnNthOfNounclass2=%1$S %2$S من كل %3$S;كل #4 سنين في %1$S %2$S من %3$S

# LOCALIZATION NOTE (yearlyOnEveryNthOfNthNounclass1):
# Edit recurrence window -> Recurrence pattern -> Yearly repeat rules
# Translate these strings according to noun class/gender of weekday (%1$S) 
# set in 'repeadDetailsDay...Nounclass' strings.
# Nounclass1 <-> Masculine gender; Nounclass2 <-> Feminine gender.
# Add others strings with suffix 3, 4,... for others noun classes if your
# language need them. In this case, corresponding strings must be added for
# others rule strings with 'Nounclass...' suffix and corresponding values 
# "nounclass..." must be written in 'repeatDetailsDayxNounclass' strings.
# %1$S - weekday
# %2$S - month
# #3 - yearly interval
# e.g. "every Thursday of March"
# e.g  "every 3 years on every Thursday of March"
yearlyOnEveryNthOfNthNounclass1=كل %1$S من %2$S;كل #3 سنين في كل %1$S من %2$S
yearlyOnEveryNthOfNthNounclass2=كل %1$S من %2$S;كل #3 سنين في كل %1$S من %2$S

repeatDetailsMonth1=يناير(كانون الثاني)
repeatDetailsMonth2=فبراير(شباط)
repeatDetailsMonth3=مارس (أزار)
repeatDetailsMonth4= ابريل (نيسان)
repeatDetailsMonth5= مايو (أيار)
repeatDetailsMonth6=يونيو (حزيران)
repeatDetailsMonth7=يوليو (تموز)
repeatDetailsMonth8=أغسطس (أب)
repeatDetailsMonth9= سبتمبر (أيلول) 
repeatDetailsMonth10=أكتوبر (تشرين الأول)
repeatDetailsMonth11=نوفمبر (تشرين الثاني)
repeatDetailsMonth12= ديسمبر (كانون الأول)

# LOCALIZATION NOTE (repeatCount):
# Edit recurrence window -> Recurrence details link on Event/Task dialog window
# %1%$ - A rule string (see above). This is the first line of the link
# %2%$ - event start date (e.g. mm/gg/yyyy)
# %3$S - event start time (e.g. hh:mm (PM/AM))
# %4$S - event end time (e.g. hh:mm (PM/AM))
# #5 - event occurence times: number
# e.g. with monthlyNthOfEvery:
# "Occurs the first Sunday of every 3 month
#  only on 1/1/2009"
#  from 5:00 PM to 6:00 PM"
# "Occurs the first Sunday of every 3 month
#  effective 1/1/2009 for 5 times
#  from 5:00 PM to 6:00 PM"
repeatCount=يحدث %1$S\nفعلى %2$S لـ #5 مرة\nمن %3$S إلى %4$S.;يحدث %1$S\nفعلى %2$S لـ #5 مرات\nمن %3$S إلى %4$S.

# LOCALIZATION NOTE (repeatCountAllDay):
# Edit recurrence window -> Recurrence details link on Event/Task dialog window
# %1%$ - A rule string (see above). This is the first line of the link
# %2%$ - event start date (e.g. mm/gg/yyyy)
# #3 - event occurence times: number
# e.g. with monthlyNthOfEvery:
# "Occurs the first Sunday of every 3 month
#  only on 1/1/2009"
# "Occurs the first Sunday of every 3 month
#  effective 1/1/2009 for 5 times"
repeatCountAllDay=يحدث %1$S\nفعلى %2$S لـ #3 مرة.;يحدث %1$S\nفعلى %2$S لـ #3 مرات.

# LOCALIZATION NOTE (repeatDetailsUntil):
# Edit recurrence window -> Recurrence details link on Event/Task dialog window
# %1%$ - A rule string (see above). This is the first line of the link
# %2%$ - event start date (e.g. mm/gg/yyyy)
# %3$S - event end date (e.g. mm/gg/yyyy)
# %4$S - event start time (e.g. hh:mm (PM/AM))
# %5$S - event end time (e.g. hh:mm (PM/AM))
# e.g. with weeklyNthOn:
# "Occurs every 2 weeks on Sunday and Friday
#  effective 1/1/2009 until 1/1/2010 
#  from 5:00 PM to 6:00 PM"
repeatDetailsUntil=يحدث %1$S\nفعلى %2$S حتى %3$S\nمن %4$S إلى %5$S.

# LOCALIZATION NOTE (repeatDetailsUntilAllDay):
# Edit recurrence window -> Recurrence details link on Event/Task dialog window
# %1%$ - A rule string (see above). This is the first line of the link
# %2%$ - event start date (e.g. mm/gg/yyyy)
# %3$S - event end date (e.g. mm/gg/yyyy)
# e.g. with monthlyDayOfNth and all day event:
# "Occurs day 3 of every 5 month
#  effective 1/1/2009 until 1/1/2010"
repeatDetailsUntilAllDay=يحدث %1$S\nفعلى %2$S حتى %3$S.

# LOCALIZATION NOTE (repeatDetailsInfinite):
# Edit recurrence window -> Recurrence details link on Event/Task dialog window
# %1%$ - A rule string (see above). This is the first line of the link
# %2%$ - event start date (e.g. mm/gg/yyyy)
# %3$S - event start time (e.g. hh:mm (PM/AM))
# %4$S - event end time (e.g. hh:mm (PM/AM))
# e.g. with monthlyDayOfNth:
# "Occurs day 3 of every 5 month
#  effective 1/1/2009
#  from 5:00 PM to 6:00 PM"
repeatDetailsInfinite=يحدث %1$S\nفعلى %2$S\nمن %3$S إلى %4$S.

# LOCALIZATION NOTE (repeatDetailsInfiniteAllDay):
# Edit recurrence window -> Recurrence details link on Event/Task dialog window
# %1%$ - A rule string (see above). This is the first line of the link
# %2%$ - event start date (e.g. mm/gg/yyyy)
# e.g. with monthlyDayOfNth and all day event:
# "Occurs day 3 of every 5 month
#  effective 1/1/2009"
repeatDetailsInfiniteAllDay=يحدث %1$S\nفعلى %2$S.

# LOCALIZATION NOTE (ruleTooComplex):
# This string is shown in the reminder details area if our code can't handle the
# complexity of the recurrence rule yet.
ruleTooComplex=إضعط هنا لمعرفة التقاصيل

newEvent=حدث جديد
newTask=مهمة جديدة

emailSubjectReply=رد: %1$S

# Link Location Dialog
specifyLinkLocation=يرجى تحديد رابط الموقع
enterLinkLocation=إدخل عنوان الموقع, أو مكان المستند.

summaryDueTaskLabel=مستحق:

# Attach File Dialog
selectAFile=Please select the file(s) to attach
removeCalendarsTitle=احذف المرفقات
removeCalendarsText=هل تريد فعلاً حذف %1$S المرفقات?

# Recurrence Dialog Widget Order
# LOCALIZATION NOTE: You can change the order of below params
# Edit recurrence window -> Recurrence pattern -> Repeat monthly
# %1$S - ordinal with article, %2$S - weekday
# e.g. "the First Saturday"
monthlyOrder=%1$S %2$S

# Edit recurrence window -> Recurrence pattern -> Repeat yearly
# %1$S - day of month, %2$S - of, %3$S - month
# e.g. "6 [of] September"
# If you don't need %2$S in your locale - please put this on the third place.
yearlyOrder=%1$S %3$S %2$S

# Edit recurrence window -> Recurrence pattern -> Repeat yearly
# %1$S - ordinal with article, %2$S - weekday, %3$S  - of, %4$S - month
# e.g. "the First Saturday of September"
# If you don't need %3$S in your locale - please put this on the third place.
yearlyOrder2=%1$S %2$S %3$S %4$S
